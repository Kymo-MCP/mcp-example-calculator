name: Package and Release (multi-language)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: write
  packages: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare tooling
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Package languages
        id: package_languages
        run: |
          set -euo pipefail
          short_sha=$(echo "${GITHUB_SHA}" | cut -c1-7)
          repo_name=$(basename "${GITHUB_REPOSITORY}")
          out_dir="release_artifacts"
          mkdir -p "$out_dir"

          pack_zip() {
            local dir="$1"
            local lang="$2"
            local excludes="$3"
            echo "Packaging ${lang}..."
            (cd "$dir" && \
              zip_name="${lang}-${repo_name}-${short_sha}.zip" && \
              zip -r "$GITHUB_WORKSPACE/$out_dir/$zip_name" . $excludes )
          }

          if [ -d nodejs ]; then
            pack_zip "nodejs" "nodejs" "-x node_modules/* .git/* .github/* **/*.zip **/dist/* **/.venv/*"
          else
            echo "No nodejs folder, skipping"
          fi

          if [ -d python ]; then
            pack_zip "python" "python" "-x .venv/* .git/* .github/* **/*.zip"
          else
            echo "No python folder, skipping"
          fi

          if [ -d binary ]; then
            pack_zip "binary" "binary" "-x .git/* .github/* **/*.zip"
          else
            echo "No binary folder, skipping"
          fi

          echo "Artifacts created:" && ls -lah "$out_dir" || true
          echo "artifacts_dir=$out_dir" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ github.run_number }}-${{ github.sha }}
          release_name: Automated release ${{ github.run_number }}
          body: Automated ZIP build of repository
          draft: false
          prerelease: false

      - name: Upload artifacts to Release
        run: |
          set -euo pipefail
          UPLOAD_URL="${{ steps.create_release.outputs.upload_url }}"
          ART_DIR="${{ steps.package_languages.outputs.artifacts_dir }}"
          if [ -z "$ART_DIR" ]; then ART_DIR=release_artifacts; fi
          echo "Uploading artifacts from $ART_DIR"
          for f in "$ART_DIR"/*.zip; do
            [ -e "$f" ] || continue
            echo "Uploading $f"
            FNAME=$(basename "$f")
            curl -sSL -X POST "${UPLOAD_URL}?name=${FNAME}" \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/zip" \
              --data-binary @"$f"
          done


